{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "Editor",
      "DisplayName": "Editor"
    },
    "ClosedComment": "Confirmed this to be a problem with Windows XP.",
    "ClosedDate": "2013-02-04T12:20:40.807-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "using Microsoft.Win32.TaskScheduler.dll v1.9.2\n\nLet's assume I configure a scheduled task this way, with an end boundary set on the trigger.\nI get the following output :\n\n```\nName : test\nEnabled : True\nLastRunTime : 01/01/0001 00:00:00\nLastTaskResult : 0\nState : Unknown\nIsActive : False\nNextRunTime : 01/01/0001 00:00:00\nShould have run : 22/01/2013 09:00:00\nTrigger #1: \nStart boundary : 15/01/2013 09:00:00\nEnd boundary : 22/01/2013 00:00:00\n```\n\nnotice that IsActive and NextRunTime are correct as the trigger is deactivated because of the passed end boundary date\n\nnow when I unset this end boundary date from Trigger#1 :\n\n```\nName : test\nEnabled : True\nLastRunTime : 01/01/0001 00:00:00\nLastTaskResult : 0\nState : Unknown\nIsActive : False\nNextRunTime : 30/01/2013 09:00:00\nShould have run : 22/01/2013 09:00:00\nTrigger #1: à 09:00 tous les jours, début : 15/01/2013\nStart boundary : 15/01/2013 09:00:00\nEnd boundary : 22/01/2013 00:00:00\n```\n\nIsActive still returns False, EndBoundary still returns the same date (and it shouldn't)\nbut NextRunTime is correct !\n\nHope this helps\nLV",
    "LastUpdatedDate": "2013-05-16T04:49:08.257-07:00",
    "PlannedForRelease": "Release 1.9.4",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "taskscheduler",
    "ReportedDate": "2013-01-29T03:14:42.703-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Unsetting a trigger's end boundary in UI does not reset the trigger's EndBoundary property",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 10778
  },
  "FileAttachments": [
    {
      "FileId": 3524,
      "FileName": "task_expiration_pb.JPG",
      "DownloadUrl": ".\\3524"
    }
  ],
  "Comments": [
    {
      "Message": "I just put together a very simple test for your issue and cannot repeat your results. Here's the code:\n```\nconst string taskName = \"Test\";\nTaskDefinition td = ts.NewTask();\ntd.Triggers.Add(new DailyTrigger() { StartBoundary = new DateTime(2013, 1, 15, 9, 0, 0), EndBoundary = new DateTime(2013, 1, 22, 9, 0, 0) });\ntd.Actions.Add(new ExecAction(\"notepad.exe\"));\nTask t = ts.RootFolder.RegisterTaskDefinition(taskName, td, TaskCreation.CreateOrUpdate, null, null, TaskLogonType.InteractiveToken);\noutput.Write(\"***********************\\r\\nName: {0}\\r\\nEnabled: {1}\\r\\nLastRunTime: {2}\\r\\nState: {3}\\r\\nIsActive: {4}\\r\\nNextRunTime: {5}\\r\\nShouldHaveRun: {6}\\r\\nTriggerStart: {7}\\r\\nTriggerEnd: {8}\\r\\n\",\n   t.Name, t.Enabled, t.LastRunTime, t.State, t.IsActive, t.NextRunTime, t.LastRunTime, t.Definition.Triggers[0].StartBoundary, t.Definition.Triggers[0].EndBoundary);\nTaskEditDialog dlg = new TaskEditDialog(t);\nif (dlg.ShowDialog() == System.Windows.Forms.DialogResult.OK)\n{\n   t = dlg.Task;\n   output.Write(\"***********************\\r\\nName: {0}\\r\\nEnabled: {1}\\r\\nLastRunTime: {2}\\r\\nState: {3}\\r\\nIsActive: {4}\\r\\nNextRunTime: {5}\\r\\nShouldHaveRun: {6}\\r\\nTriggerStart: {7}\\r\\nTriggerEnd: {8}\\r\\n\",\n      t.Name, t.Enabled, t.LastRunTime, t.State, t.IsActive, t.NextRunTime, t.LastRunTime, t.Definition.Triggers[0].StartBoundary, t.Definition.Triggers[0].EndBoundary);\n}\n```\nWhen I run it the first time, I get:\n```\nName: Test\nEnabled: True\nLastRunTime: 1/1/0001 12:00:00 AM\nState: Ready\nIsActive: False\nNextRunTime: 1/1/0001 12:00:00 AM\nShouldHaveRun: 1/1/0001 12:00:00 AM\nTriggerStart: 1/15/2013 9:00:00 AM\nTriggerEnd: 1/22/2013 9:00:00 AM\n```\nWhen I open the dialog, uncheck the checkbox for the trigger's \"Expires\" item and click OK, I get:\n```\nName: Test\nEnabled: True\nLastRunTime: 1/1/0001 12:00:00 AM\nState: Ready\nIsActive: True\nNextRunTime: 1/30/2013 9:00:00 AM\nShouldHaveRun: 1/1/0001 12:00:00 AM\nTriggerStart: 1/15/2013 9:00:00 AM\nTriggerEnd: 12/31/9999 11:59:59 PM\n```",
      "PostedDate": "2013-01-29T09:00:14.92-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-01-30T01:13:24.977-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi, thanks for answering\nIndeed when using your task editor API, things work fine.\nI am using Windows XP standard scheduled tasks UI.\r\n\r\nCheck the attached screenshot (sorry, in French) : I unchecked \"expires\" in the Win XP UI and it's still set in TaskDialog (which is \"normal\" as the expiration date is still set)\r\n\r\nGuess the problem lies in Win (XP at least, I have no other version to test)...",
      "PostedDate": "2013-01-30T01:13:27.587-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-01-30T08:21:01.54-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-04T12:20:40.807-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:21:00.733-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:49:08.257-07:00",
      "Id": -2147483648
    }
  ]
}