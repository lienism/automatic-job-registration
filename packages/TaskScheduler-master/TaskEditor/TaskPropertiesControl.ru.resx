<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="taskNameLabel.Text" xml:space="preserve">
    <value>Название:</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Расположение:</value>
  </data>
  <data name="taskAuthorLabel.Text" xml:space="preserve">
    <value>Автор:</value>
  </data>
  <data name="taskDescLabel.Text" xml:space="preserve">
    <value>Описание:</value>
  </data>
  <data name="taskNameText.Text" xml:space="preserve">
    <value>Имя задачи</value>
  </data>
  <data name="taskVersionLabel.Text" xml:space="preserve">
    <value>Настроить для:</value>
  </data>
  <data name="taskHiddenCheck.Text" xml:space="preserve">
    <value>Скрытая</value>
  </data>
  <data name="taskRunLevelCheck.Text" xml:space="preserve">
    <value>Выполнить с наивысшими правами</value>
  </data>
  <data name="taskLocalOnlyCheck.Text" xml:space="preserve">
    <value>Не сохранять пароль. Будут доступны ресурсы только локального компьютера.</value>
  </data>
  <data name="taskLoggedOptionalRadio.Text" xml:space="preserve">
    <value>Выполнять вне зависимости от регистрации пользователя</value>
  </data>
  <data name="taskLoggedOnRadio.Text" xml:space="preserve">
    <value>Выполнять только для зарегистрированного пользователя</value>
  </data>
  <data name="changePrincipalButton.Text" xml:space="preserve">
    <value>Изменить...</value>
  </data>
  <data name="taskUserAcctLabel.Text" xml:space="preserve">
    <value>При выполнении задачи, используйте следующую учетную запись:</value>
  </data>
  <data name="taskSecurityGroupBox.Text" xml:space="preserve">
    <value>Параметры безопасности</value>
  </data>
  <data name="generalTab.Text" xml:space="preserve">
    <value>Общие</value>
  </data>
  <data name="taskTriggerIntroLabel.Text" xml:space="preserve">
    <value>При создании задачи, можно указать условия, при которых она будет запускаться.</value>
  </data>
  <data name="triggersTab.Text" xml:space="preserve">
    <value>Триггеры</value>
  </data>
  <data name="actionIntroLabel.Text" xml:space="preserve">
    <value>При создании задачи необходимо указать действие, которое будет выполняться при ее запуске.</value>
  </data>
  <data name="actionsTab.Text" xml:space="preserve">
    <value>Действия</value>
  </data>
  <data name="taskStartIfConnectionCheck.Text" xml:space="preserve">
    <value>Запускать задачу только при подключении к следующей сети:</value>
  </data>
  <data name="networkConditionGroupBox.Text" xml:space="preserve">
    <value>Сеть</value>
  </data>
  <data name="taskStopIfGoingOnBatteriesCheck.Text" xml:space="preserve">
    <value>Останавливать при переходе на питание от батарей</value>
  </data>
  <data name="taskWakeToRunCheck.Text" xml:space="preserve">
    <value>Пробуждать компьютер для выполнения задачи</value>
  </data>
  <data name="taskDisallowStartIfOnBatteriesCheck.Text" xml:space="preserve">
    <value>Запускать только при питании от электосети</value>
  </data>
  <data name="powerConditionGroupBox.Text" xml:space="preserve">
    <value>Питание</value>
  </data>
  <data name="taskRestartOnIdleCheck.Text" xml:space="preserve">
    <value>Перезапускать при возобновлении простоя</value>
  </data>
  <data name="taskStopOnIdleEndCheck.Text" xml:space="preserve">
    <value>Останавливать при выходе компьютера из простоя</value>
  </data>
  <data name="taskIdleWaitTimeoutLabel.Text" xml:space="preserve">
    <value>Ожидать простоя в течение: </value>
  </data>
  <data name="taskIdleDurationCheck.Text" xml:space="preserve">
    <value>Запускать задачу при простое компьютера:</value>
  </data>
  <data name="idleConditionGroupBox.Text" xml:space="preserve">
    <value>Простой</value>
  </data>
  <data name="conditionIntroLabel.Text" xml:space="preserve">
    <value>Укажите условия, которые вместе с триггерами будут определять необходимость выполнения задачи. Если заданное условие недопустимо, задача не будет выполняться. </value>
  </data>
  <data name="conditionsTab.Text" xml:space="preserve">
    <value>Условия</value>
  </data>
  <data name="taskRunningRuleLabel.Text" xml:space="preserve">
    <value>Если задача уже выполняется, то применять следующее правило:</value>
  </data>
  <data name="taskRestartAttemptTimesLabel.Text" xml:space="preserve">
    <value>раз</value>
  </data>
  <data name="taskRestartCountLabel.Text" xml:space="preserve">
    <value>Количество попыток перезапуска:</value>
  </data>
  <data name="taskDeleteAfterCheck.Text" xml:space="preserve">
    <value>Если повтор задачи не запланирован, удалять через: </value>
  </data>
  <data name="taskAllowHardTerminateCheck.Text" xml:space="preserve">
    <value>Принудительная остановка задачи, если она не прекращается по запросу</value>
  </data>
  <data name="taskExecutionTimeLimitCheck.Text" xml:space="preserve">
    <value>Останавливать задачу, выполняемую дольше:</value>
  </data>
  <data name="taskRestartIntervalCheck.Text" xml:space="preserve">
    <value>При сбое выполнения перезапускать через:</value>
  </data>
  <data name="taskStartWhenAvailableCheck.Text" xml:space="preserve">
    <value>Немедленно запускать задачу, если пропущен плановый запуск</value>
  </data>
  <data name="taskAllowDemandStartCheck.Text" xml:space="preserve">
    <value>Разрешать выполнение задачи по требованию</value>
  </data>
  <data name="settingsIntroLabel.Text" xml:space="preserve">
    <value>Укажите дополнительные параметры выполнения задачи.</value>
  </data>
  <data name="settingsTab.Text" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="taskRegSourceLabel.Text" xml:space="preserve">
    <value>Источник:</value>
  </data>
  <data name="taskRegURILabel.Text" xml:space="preserve">
    <value>URI:</value>
  </data>
  <data name="taskRegDocLabel.Text" xml:space="preserve">
    <value>Документация:</value>
  </data>
  <data name="taskRegSDDLLabel.Text" xml:space="preserve">
    <value>Безопасность:</value>
  </data>
  <data name="taskRegVersionLabel.Text" xml:space="preserve">
    <value>Версия:</value>
  </data>
  <data name="taskRegSDDLBtn.Text" xml:space="preserve">
    <value>Параметры безопасности...</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Укажите регистрационную информацию для задачи.</value>
  </data>
  <data name="regInfoTab.Text" xml:space="preserve">
    <value>Информация</value>
  </data>
  <data name="taskMaintenanceExclusiveCheck.Text" xml:space="preserve">
    <value>Запуск задания в монопольном режиме</value>
  </data>
  <data name="taskMaintenanceDeadlineLabel.Text" xml:space="preserve">
    <value>Если задача была завершена с ошибкой, повторить через: </value>
  </data>
  <data name="taskMaintenancePeriodLabel.Text" xml:space="preserve">
    <value>В ходе обслуживания, запускать задачу каждые:</value>
  </data>
  <data name="autoMaintGroup.Text" xml:space="preserve">
    <value>Автоматическое обслуживание</value>
  </data>
  <data name="principalSIDTypeLabel.Text" xml:space="preserve">
    <value> Тип идентификатора безопасности:</value>
  </data>
  <data name="principalReqPrivilegesLabel.Text" xml:space="preserve">
    <value>Требуемые права доступа:</value>
  </data>
  <data name="secHardGroup.Text" xml:space="preserve">
    <value>Усиление защиты</value>
  </data>
  <data name="taskEnabledCheck.Text" xml:space="preserve">
    <value>Включено</value>
  </data>
  <data name="taskDisallowStartOnRemoteAppSessionCheck.Text" xml:space="preserve">
    <value>Запретить запуск при наличии подключения со стороны удаленного приложения</value>
  </data>
  <data name="taskUseUnifiedSchedulingEngineCheck.Text" xml:space="preserve">
    <value>Использовать единый движок планировщика</value>
  </data>
  <data name="taskVolatileCheck.Text" xml:space="preserve">
    <value>Автоматически отключать задачу при запуске Windows</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Приоритет:</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Укажите дополнительные параметры безопасности, обслуживания и совместимости системных характерстик для задачи.</value>
  </data>
  <data name="addPropTab.Text" xml:space="preserve">
    <value>Дополнительно</value>
  </data>
  <data name="runTimesErrorLabel.Text" xml:space="preserve">
    <value>(текст ошибки)</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Ошибка:</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Не удается отобразить время выполнения для этой задачи.</value>
  </data>
  <data name="runTimesTab.Text" xml:space="preserve">
    <value>Время выполнения</value>
  </data>
  <data name="historyTab.Text" xml:space="preserve">
    <value>История</value>
  </data>
</root>