[
  {
    "Id": "539590",
    "ThreadId": "239319",
    "Html": "\r\n<p>Hey everyone, recently my old boss asked me to help with a coding project of his, and in it he uses this library to add a startup entry for the main application. It is assumed the user is the administrator of the PC and can supply the username/password.</p>\r\n<p>Currently, we are able to add an entry for the account that runs it;&nbsp; but that's the extent of it. When we look at the properties of the added entry, the logon trigger states that it is set to run for Any User, but it never starts up on the other accounts\r\n (some of which are not the administrative accounts, but if the password is supplied, shouldn't it work correctly?). It's also set to Run only when the user is logged on (does that mean only when the admin account is logged in, or only when any account is logged\r\n in?). Also note: there are no entries for our program shown on the other accounts' Task Schedulers at all.</p>\r\n<p>&nbsp;</p>\r\n<p>Can someone please tell me how I can make an entry for All Users, and not just the specific account?</p>\r\n<p>&nbsp;</p>\r\n<p>Here is what we have at the moment:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> useTS()\r\n        {\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                <span style=\"color:blue\">using</span> (TaskService ts = <span style=\"color:blue\">new</span> TaskService())\r\n                {\r\n                    TaskFolder tf = ts.RootFolder;\r\n                    <span style=\"color:blue\">try</span>\r\n                    {\r\n                        TaskDefinition td = ts.NewTask();\r\n                        td.Data = _name;\r\n                        td.Principal.UserId = <span style=\"color:blue\">null</span>;\r\n                        td.Principal.LogonType = TaskLogonType.InteractiveToken; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; td.RegistrationInfo.Author = _company;\r\n                        td.RegistrationInfo.Description = _descrip;\r\n                        td.Settings.DisallowStartIfOnBatteries = <span style=\"color:blue\">false</span>;\r\n                        td.Settings.Enabled = <span style=\"color:blue\">true</span>;\r\n                        td.Settings.Hidden = <span style=\"color:blue\">false</span>;\r\n                        td.Settings.Priority = System.Diagnostics.ProcessPriorityClass.Normal;\r\n                        td.Settings.RunOnlyIfIdle = <span style=\"color:blue\">false</span>;\r\n                        td.Settings.RunOnlyIfNetworkAvailable = <span style=\"color:blue\">false</span>;\r\n                        td.Settings.StopIfGoingOnBatteries = <span style=\"color:blue\">false</span>;\r\n                        td.Principal.RunLevel = TaskRunLevel.Highest;\r\n                        td.RegistrationInfo.Source = _name;\r\n                        td.RegistrationInfo.Version = <span style=\"color:blue\">new</span> Version(2, 6);\r\n                        td.Settings.AllowDemandStart = <span style=\"color:blue\">true</span>;\r\n                        td.Settings.AllowHardTerminate = <span style=\"color:blue\">true</span>;\r\n                        td.Settings.Compatibility = TaskCompatibility.V2;\r\n                        td.Settings.DeleteExpiredTaskAfter = TimeSpan.FromMinutes(1);\r\n                        td.Settings.StartWhenAvailable = <span style=\"color:blue\">true</span>;\r\n                        td.Settings.WakeToRun = <span style=\"color:blue\">false</span>;\r\n                        td.Settings.RestartCount = 5;\r\n                        td.Settings.RestartInterval = TimeSpan.FromSeconds(100);\r\n\r\n\r\n                        LogonTrigger lTrigger = (LogonTrigger)td.Triggers.Add(<span style=\"color:blue\">new</span> LogonTrigger());\r\n                        lTrigger.Delay = TimeSpan.FromMinutes(1);\r\n                        lTrigger.EndBoundary = DateTime.Today &#43; TimeSpan.FromDays(9999);\r\n\r\n\r\n                        td.Actions.Add(<span style=\"color:blue\">new</span> ExecAction(textBox8.Text &#43; <span style=\"color:#a31515\">&quot;.exe&quot;</span>, <span style=\"color:#a31515\">&quot;&quot;</span>, textBox7.Text));\r\n\r\n                        tf.RegisterTaskDefinition(_name, td, TaskCreation.CreateOrUpdate, <span style=\"color:blue\">null</span>, <span style=\"color:blue\">null</span>, TaskLogonType.InteractiveToken, <span style=\"color:blue\">null</span>);\r\n\r\n                    }\r\n                    <span style=\"color:blue\">catch</span> (Exception ex)\r\n                    {\r\n                        MessageBox.Show(<span style=\"color:#a31515\">&quot;Task Scheduler Entry Failed: &quot;</span> &#43; ex.Message);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                \r\n            }\r\n            <span style=\"color:blue\">catch</span> (Exception usTSExcep)\r\n            {\r\n                \r\n            }\r\n\r\n\r\n        }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-12-22T14:11:29.077-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "543036",
    "ThreadId": "239319",
    "Html": "\r\n<p><span style=\"text-decoration:underline\"><strong>Correction:<br>\r\n</strong></span><span style=\"text-decoration:line-through\">The LogonTrigger is associated only with the account that registers the task and will not fire for any other account. I am not aware of any way to use a system account to register a task to be run at\r\n each user's logon. To accomplish what you are after, given the need to run an executable, I would suggest not using the Task Scheduler and instead placing a shortcut in the Startup folder of the &quot;All Users&quot;. It is different on each version of Windows, but\r\n you can look it up as a named folder.</span>&nbsp;The LogonTrigger will be associated with all accounts if the UserId property is set to null and the account registering the task is an adminstrator (<a href=\"http://msdn.microsoft.com/en-us/library/aa380727(VS.85).aspx\">technical\r\n reference here</a>).&nbsp;If the task can be run at system startup before any user logs on, you can use the BootTrigger.</p>\r\n",
    "PostedDate": "2011-01-02T21:33:30.917-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "548187",
    "ThreadId": "239319",
    "Html": "\r\n<p>Thanks for the suggestion, but we already tried that and it can't be done with Vista or 7. On Vista or 7, no program that requires Administrative privileges can start with Windows through the startup folder or registry Run entry. Microsoft's User Account\r\n Control will automatically block any and all programs that require administrator access from within the normal startup routine...</p>\r\n<p>That's the whole reason we tried using the Task Scheduler, because it's the only ways we've been able to get the program loading with the correct permissions at startup.</p>\r\n<p>We've tried using a service, but the service ALWAYS, no matter what, runs on the SYSTEM user account and is only capable of starting the application in a SYSTEM account as well. The SYSTEM account is incapable of elevating any process to Administrator; regardless\r\n of how its opened, it always opens as SYSTEM.</p>\r\n<p>And we can't create another admin-based program to elevate it, because there's no way to elevate the first one in the chain, so we'd be back to square one.</p>\r\n<p>I don't understand how other programs requiring administrative privileges are capable of starting up with Windows and not running into such problems...</p>\r\n<p>About your suggestion for the BootTrigger, I'm wondering if it would work. The program will not start up beyond InitializeComponent() unless an internet connection is available to check the license with the server, so I'm curious to know if this program\r\n would actually startup correctly.... Sound like an adventure, I'm down to try it and will come back and report on it.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks again for the help =)</p>\r\n",
    "PostedDate": "2011-01-12T11:28:06.617-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "548244",
    "ThreadId": "239319",
    "Html": "\r\n<p>Please see my correction above.</p>\r\n",
    "PostedDate": "2011-01-12T12:54:05.543-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]