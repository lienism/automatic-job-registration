[
  {
    "Id": "1286924",
    "ThreadId": "560105",
    "Html": "Hi,\r<br />\n<br />\nI've been using the Task Scheduler wrapper and TaskEditDialog in a project - and its mostly working great - thanks for the work on it.\r<br />\n<br />\nHave an issue that may be caused by my code but I cant get to the bottom of it so far.\r<br />\n<br />\nMy project is a server monitor - we allow the users to set up what to monitor and how to be notified, and then we use your task schedule wrapper and the edit form to allow them to schedule when it will run. On the TaskEditDialog I only show the tabs they need to schedule the task. I also put a guid into the task description which matches the guid of the monitor - so I can do a lookup later on.\r<br />\n<br />\nIts working great to create a new task, and to fetch the task again to get the last run time etc. But am getting a problem when I go to edit an exiting task using the TaskEditDialog - it crashes when the OK button is pressed, and debugging through your code shows its a null ref exception in the TaskFolder.RegisterTaskDefinition method - if i step into that you can see the v2Folder variable is null, so the code then goes on to try to save it as a v1 task, when it should be v2 and you get a null ref when it tries to get the v1task flags.\r<br />\n<br />\nHeres some code....<br />\n<pre><code>class TaskDemo\n{\n    //create new task\n    public bool ScheduleNewTask(Guid monitorid, string runnerexe, string originalname, Guid scheduleId, out string outname)\n    {\n        outname = string.Empty;\n\n        using (TaskService ts = new TaskService())\n        {\n            string arg = monitorid.ToString();\n\n            TaskDefinition td = ts.NewTask();\n            td.RegistrationInfo.Description = &quot;Monitoring Task &quot; + scheduleId.ToString();\n            var dir = Directory.GetCurrentDirectory();\n            td.Actions.Add(new ExecAction(runnerexe, arg, dir));\n\n            TaskEditDialog editorForm = new TaskEditDialog(ts, td, true, true);\n            editorForm.TaskName = originalname;\n            editorForm.TaskFolder = &quot;Monitoring&quot;;\n            editorForm.AvailableTabs = AvailableTaskTabs.General | AvailableTaskTabs.Conditions | AvailableTaskTabs.Settings | AvailableTaskTabs.Triggers;\n\n            var res = editorForm.ShowDialog();\n\n            if (res == DialogResult.OK &amp;&amp; editorForm.Task != null)\n            {\n                outname = editorForm.TaskName;\n            }\n\n            return res == DialogResult.OK;\n        }\n    }\n\n    //get a task\n    public Task GetTask(Guid scheduleId)\n    {\n        using (TaskService ts = new TaskService())\n        {\n            var folder = ts.GetFolder(&quot;Monitoring&quot;);\n\n            foreach (Task task in folder.Tasks)\n            {\n                if (task.Definition.RegistrationInfo.Description.Contains(scheduleId.ToString()))\n                {\n                    return task;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    //edit a task\n    public bool EditScheduledTask(string runnerexe, string name, Guid scheduleId, out string outname)\n    {\n        outname = string.Empty;\n\n        var task = GetTask(scheduleId);\n\n        TaskEditDialog editorForm = new TaskEditDialog();\n        editorForm.TaskFolder = &quot;Monitoring&quot;;\n        editorForm.AvailableTabs = AvailableTaskTabs.General | AvailableTaskTabs.Conditions | AvailableTaskTabs.Settings | AvailableTaskTabs.Triggers;\n        editorForm.Editable = true;\n        editorForm.RegisterTaskOnAccept = true;\n        editorForm.Initialize(task);\n\n        var res = editorForm.ShowDialog();\n\n        //!!!!on ok get null reference exception from TaskFolder.RegisterTaskDefinition\n        //v2Folder is null so it tries to run through the v1code\n\n        if (res == DialogResult.OK &amp;&amp; editorForm.Task != null)\n        {\n            outname = editorForm.TaskName;\n        }\n\n        return res == DialogResult.OK;\n    }\n}\n\n</code></pre>\n\nIs it something wrong with the way I am initializing the TaskEditForm in my edit method? I've tried passing in the task in the constructor, passing in a reference to the task service to editorForm.TaskService and they either have the same result or I end up with an empty form with none of my task details.\r<br />\n<br />\nAny help would be much appreciated.\r<br />\n<br />\nThanks\r<br />\n<br />\nAndy<br />\n",
    "PostedDate": "2014-08-06T04:00:40.88-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1287825",
    "ThreadId": "560105",
    "Html": "I think the problem is that you are using the 'using' statement in your creation and get methods which close the connection to the system COM server at the end of the 'using' clause. When you call the edit method, you have a valid task object, but the TaskService object is not valid. Opening and closing the TaskService object, is not a good idea in this sample code. I would recommend getting an instance of the TaskService once and holding it until you're done working with the task. In other words, put TaskService into a field variable and don't use the 'using' statements.<br />\n",
    "PostedDate": "2014-08-07T15:32:45.647-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-08-11T07:37:13.57-07:00"
  },
  {
    "Id": "1288832",
    "ThreadId": "560105",
    "Html": "Hi Dahall,\r<br />\n<br />\nApologies for the late reply - just back to work today and have tried your suggestion and it works! \r<br />\n<br />\nI had assumed the task service instance did not need to be the same one when getting the task and in the edit form - can see where I was incorrect now.\r<br />\n<br />\nMany thanks for your assistance and work on this project. \r<br />\n<br />\nAndy<br />\n",
    "PostedDate": "2014-08-11T05:52:00.483-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]