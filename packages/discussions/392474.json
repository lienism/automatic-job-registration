[
  {
    "Id": "901964",
    "ThreadId": "392474",
    "Html": "\r\n<p>[Environment]<br>\r\nOS: 64bit Win7</p>\r\n<p>[Symptom]<br>\r\n'Select COM Object' dialog runs indefinitely and bombs if cancelled.</p>\r\n<p>[Repro Steps]<br>\r\n1.&nbsp;Click 'Actions' tab &gt; click 'New' button<br>\r\n2. 'New Action' dialog opens &gt; select 'Custom handler' from drop down list<br>\r\n3. Click the button next to the 'COM Object'<br>\r\n4. 'Select COM Object' dialog opens<br>\r\n5. select any object &gt; click 'OK' /'Cancel' button</p>\r\n<p>Exception details:</p>\r\n<p>This BackgroundWorker states that it doesn't support cancellation. Modify<br>\r\nWorkerSupportsCancellation to state that it does support cancellation.</p>\r\n<p><br>\r\n-------------------------- Technical Information Follows<br>\r\n--------------------------</p>\r\n<p>Exception Details:<br>\r\n----------------------------------------<br>\r\nException type:&nbsp; System.InvalidOperationException<br>\r\nMessage:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This BackgroundWorker states that it doesn't support<br>\r\ncancellation. Modify WorkerSupportsCancellation to state that it does support<br>\r\ncancellation.<br>\r\nSource:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System<br>\r\nTarget Site:&nbsp;&nbsp;&nbsp;&nbsp; CancelAsync</p>\r\n<p>Stack Trace:<br>\r\n&nbsp;&nbsp; at System.ComponentModel.BackgroundWorker.CancelAsync()<br>\r\n&nbsp;&nbsp; at<br>\r\nMicrosoft.Win32.TaskScheduler.ComObjectSelectionDialog.okButton_Click(Object<br>\r\nsender, EventArgs e)<br>\r\n&nbsp;&nbsp; at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)<br>\r\n&nbsp;&nbsp; at System.Windows.Forms.Control.WmMouseUp(Message&amp; m, MouseButtons button,<br>\r\nInt32 clicks)<br>\r\n&nbsp;&nbsp; at System.Windows.Forms.Control.WndProc(Message&amp; m)<br>\r\n&nbsp;&nbsp; at System.Windows.Forms.ButtonBase.WndProc(Message&amp; m)<br>\r\n&nbsp;&nbsp; at System.Windows.Forms.Button.WndProc(Message&amp; m)<br>\r\n&nbsp;&nbsp; at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr<br>\r\nwparam, IntPtr lparam)</p>\r\n",
    "PostedDate": "2012-08-21T06:54:37.953-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "901972",
    "ThreadId": "392474",
    "Html": "<p>...may I hasten to add that the OK button becomes enabled at first, then after selecting a COM object, it remains disabled with the wait cursor running indefinitely.</p>\r\n<p>Sometimes, when a COM object is selected, an exception is thrown out:</p>\r\n<p>Exception information:<br />-------------------------------------------------------------------------------------------------------</p>\r\n<p>The object's type must be __ComObject or derived from __ComObject.<br />Parameter name: o</p>\r\n<p>-------------------------- Technical Information Follows --------------------------</p>\r\n<p>Exception Details:<br />----------------------------------------<br />Exception type:&nbsp; System.ArgumentException<br />Message:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The object's type must be __ComObject or derived from __ComObject.<br />Parameter name: o<br />Source:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mscorlib<br />Target Site:&nbsp;&nbsp;&nbsp;&nbsp; ReleaseComObject</p>\r\n<p>Stack Trace:<br />&nbsp;&nbsp; at System.Runtime.InteropServices.Marshal.ReleaseComObject(Object o)<br />&nbsp;&nbsp; at Microsoft.Win32.TaskScheduler.ComObjectSelectionDialog.SupportsInterface(Guid clsid, Guid iGuid)<br />&nbsp;&nbsp; at Microsoft.Win32.TaskScheduler.ComObjectSelectionDialog.listView1_ItemSelectionChanged(Object sender, ListViewItemSelectionChangedEventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.ListView.OnItemSelectionChanged(ListViewItemSelectionChangedEventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.ListView.WmReflectNotify(Message&amp; m)<br />&nbsp;&nbsp; at System.Windows.Forms.ListView.WndProc(Message&amp; m)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message&amp; m)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&amp; m)<br />&nbsp;&nbsp; at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)</p>",
    "PostedDate": "2012-08-21T07:09:11.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]