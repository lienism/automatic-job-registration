[
  {
    "Id": "479151",
    "ThreadId": "223222",
    "Html": "<p>When I try to set the DailyTrigger.Repetition.Interval property on Windows Server 2003, I get an exception. &nbsp;The same code running on Windows 7 Ultimate works fine. &nbsp;If I comment out the line of code that sets the Interval, the task is created however it doesn't have any interval.</p>\r\n<p>&nbsp;</p>\r\n<p>My Code is:</p>\r\n<p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> (TaskService ts = <span style=\"color:blue\">new</span> TaskService())\r\n            {\r\n                Task igisMonitor = ts.GetTask(TASK_NAME);\r\n                <span style=\"color:blue\">if</span> (<span style=\"color:blue\">null</span> == igisMonitor)\r\n                {\r\n                    <span style=\"color:blue\">try</span>\r\n                    {\r\n                        TaskDefinition igisMonTaskDef = ts.NewTask();\r\n                        igisMonTaskDef.RegistrationInfo.Author = TASK_AUTHOR;\r\n                        igisMonTaskDef.RegistrationInfo.Description = TASK_DESCRIPTION;\r\n                        igisMonTaskDef.Settings.Enabled = <span style=\"color:blue\">true</span>;\r\n                        igisMonTaskDef.Settings.ExecutionTimeLimit = TimeSpan.FromMinutes(10);\r\n                        igisMonTaskDef.Settings.RunOnlyIfIdle = <span style=\"color:blue\">false</span>;\r\n                        \r\n                        <span style=\"color:green\">//Set the compatability level for V2 tasks and</span>\r\n                        <span style=\"color:green\">//start when available</span>\r\n                        <span style=\"color:blue\">if</span> (isNewVersion)\r\n                        {\r\n                            igisMonTaskDef.Settings.StartWhenAvailable = <span style=\"color:blue\">true</span>;\r\n                            igisMonTaskDef.Settings.Compatibility = TaskCompatibility.V2;\r\n                        }\r\n\r\n                        <span style=\"color:green\">//Create a trigger for this task</span>\r\n                        <span style=\"color:blue\">try</span>\r\n                        {\r\n                            DailyTrigger runTrigger = (DailyTrigger)igisMonTaskDef.Triggers.Add(<span style=\"color:blue\">new</span> DailyTrigger { DaysInterval = 1 });\r\n                            runTrigger.Repetition.Duration = TimeSpan.FromMinutes(TASK_RUN_INTERVAL);\r\n                            runTrigger.Repetition.StopAtDurationEnd = <span style=\"color:blue\">true</span>;\r\n                            runTrigger.StartBoundary = DateTime.Now.Date;\r\n\r\n                            <span style=\"color:blue\">if</span> (isNewVersion)\r\n                            {\r\n                                runTrigger.Repetition.Interval = TimeSpan.FromMinutes(TASK_RUN_INTERVAL);\r\n                            }\r\n                            <span style=\"color:blue\">else</span>\r\n                            {\r\n                                runTrigger.Repetition.Interval = TimeSpan.FromMinutes(TASK_RUN_INTERVAL);\r\n                            }\r\n                        }\r\n                        <span style=\"color:blue\">catch</span> (Exception runTriggerEx)\r\n                        {\r\n                            <span style=\"color:blue\">string</span> message = <span style=\"color:#a31515\">&quot;Error adding DailyTrigger::&quot;</span> + runTriggerEx.ToString();\r\n                            <span style=\"color:blue\">throw</span> <span style=\"color:blue\">new</span> Exception(message);\r\n                        }\r\n\r\n                        <span style=\"color:blue\">try</span>\r\n                        {\r\n                            igisMonTaskDef.Actions.Add(<span style=\"color:blue\">new</span> ExecAction(POWERSHELL_EXE_PATH, _scriptCommand, _workingDir));\r\n                        }\r\n                        <span style=\"color:blue\">catch</span> (Exception addExecActionEx)\r\n                        {\r\n                            <span style=\"color:blue\">string</span> message = <span style=\"color:#a31515\">&quot;Error adding ExecAction::&quot;</span> + addExecActionEx.ToString();\r\n                            <span style=\"color:blue\">throw</span> <span style=\"color:blue\">new</span> Exception(message);\r\n                        }\r\n\r\n\r\n                        <span style=\"color:green\">//Register the task</span>\r\n                        ts.RootFolder.RegisterTaskDefinition(TASK_NAME, igisMonTaskDef);\r\n                    }\r\n                    <span style=\"color:blue\">catch</span> (Exception e)\r\n                    {\r\n                        <span style=\"color:blue\">throw</span> e;\r\n                    }\r\n                }\r\n            }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>In the above code, isNewVersion is a bool that is set by the constructor of my class that contains the method which this code comes from.</p>\r\n<p>&nbsp;</p>\r\n<p>The exception I get is:</p>\r\n<p>System.ArgumentException: Value does not fall within the expected range.&nbsp;&nbsp; at Microsoft.Win32.TaskScheduler.V1Interop.ITaskTrigger.SetTrigger(TaskTrigger&amp; Trigger)&nbsp;&nbsp; at Microsoft.Win32.TaskScheduler.RepetitionPattern.Bind()&nbsp;&nbsp; at Microsoft.Win32.TaskScheduler.RepetitionPattern.set_Interval(TimeSpan value)&nbsp;&nbsp; at IntergisMonitor.TaskSchedulerInterface.AddScheduledTask() in C:\\Source\\Implementation\\IntergisMonitor\\IntergisMonitor\\TaskSchedulerInterface.cs:line 144&nbsp;&nbsp; at IntergisMonitor.TaskSchedulerInterface.AddScheduledTask() in C:\\Source\\Implementation\\IntergisMonitor\\IntergisMonitor\\TaskSchedulerInterface.cs:line 169&nbsp;&nbsp; at IntergisMonitor.FormMain.buttonCreateScheduledTask_Click(Object sender, EventArgs e) in C:\\Source\\Implementation\\IntergisMonitor\\IntergisMonitor\\FormMain.cs:line 46&nbsp;&nbsp; at System.Windows.Forms.Control.OnClick(EventArgs e)&nbsp;&nbsp; at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)&nbsp;&nbsp; at System.Windows.Forms.Control.WmMouseUp(Message&amp; m, MouseButtons button, Int32 clicks)&nbsp;&nbsp; at System.Windows.Forms.Control.WndProc(Message&amp; m)&nbsp;&nbsp; at System.Windows.Forms.ButtonBase.WndProc(Message&amp; m)&nbsp;&nbsp; at System.Windows.Forms.Button.WndProc(Message&amp; m)&nbsp;&nbsp; at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&amp; m)&nbsp;&nbsp; at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)</p>\r\n<p>I have the latest version of the dll from the download page</p>",
    "PostedDate": "2010-08-11T08:01:38.58-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "481530",
    "ThreadId": "223222",
    "Html": "<p>This sounds like a limitation with the core library. The only constraint on the ITaskTrigger.SetTrigger method from the Microsoft documentation is that interval must be less than duration. This is your problem as you have set them both to the same value.&nbsp;Make sure runTrigger.Repetition.Interval is less than the runTrigger.Repetition.Duration value.</p>",
    "PostedDate": "2010-08-17T11:53:43.23-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "481535",
    "ThreadId": "223222",
    "Html": "<p>Good call, that did it! &nbsp;Thanks, your library rocks!</p>",
    "PostedDate": "2010-08-17T12:08:24.773-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]