[
  {
    "Id": "655700",
    "ThreadId": "268490",
    "Html": "\r\n<p>Hi David,</p>\r\n<p>I'm trying to create a task on Win 2008 R2 to run a batch script (that eventually calls powershell but that's irrelevant for now, I think).</p>\r\n<p>The code is as below. The trouble is, I'm simply unable to get this to work in various combinations. I've tried to debug through it, and I see that it ends up calling the RegisterTaskDefinition method in the ITaskDefinition COM object as follows:</p>\r\n<pre style=\"font-family:Consolas; background:white; color:black; font-size:13px\">\t<span style=\"color:blue\">if</span>&nbsp;(v2Folder&nbsp;!=&nbsp;<span style=\"color:blue\">null</span>)\r\n\t\t<span style=\"color:blue\">return</span>&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">Task</span>(<span style=\"color:blue\">this</span>.TaskService,&nbsp;v2Folder.RegisterTaskDefinition(Path,&nbsp;definition.v2Def,&nbsp;(<span style=\"color:blue\">int</span>)createType,&nbsp;UserId,&nbsp;password,&nbsp;LogonType,&nbsp;sddl));\r\n</pre>\r\n<p>I have checked in the debugger that the user name, password and logon type are set correctly (LogonType is&nbsp;set to TaskLogonType.Password, and UserId and Password are valid values which I know work).</p>\r\n<p>The error I get is COMException (18,8) LogonType. The HRESULT seems to be 0x80070534&nbsp; (I searched around the internet and it seems to&nbsp;be related to the message: &quot;No mapping between account names and security IDs was done&quot;).</p>\r\n<p>The MSDN documentation for ITaskDefinition.RegisterTaskDefinition&nbsp;says that the 0x80070534 error occurs when called by the System Account with user paramter = NULL, password = NULL and LogonType = SERVICE_ACCOUNT. But I've checked that the caller is\r\n not the system account (more on this later), and the user is a non-null string containing a DOMAIN\\Username.</p>\r\n<p>Now, a little bit more about how and where this code is used:</p>\r\n<p>It is part of a ASP.NET web application that runs under Windows Authentication with ASP.NET Impersonation turned on. I've logged the Exception to the Event log and I see that the identity is indeed being impersonated:</p>\r\n<p><span style=\"font-size:xx-small\"><span style=\"font-size:xx-small\"></p>\r\n<p><span lang=\"EN-AU\"></p>\r\n<p>System.Runtime.InteropServices.COMException (0x80070534): (18,8):LogonType:</p>\r\n<p>at Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder.RegisterTaskDefinition(String Path, ITaskDefinition pDefinition, Int32 flags, Object UserId, Object password, TaskLogonType LogonType, Object sddl)</p>\r\n<p>at Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTaskDefinition(String Path, TaskDefinition definition, TaskCreation createType, String UserId, String password, TaskLogonType LogonType, String sddl) in C:\\Users\\krishna.nadiminti\\Downloads\\taskscheduler-68509\\TaskService\\TaskFolder.cs:line\r\n 220</p>\r\n<p>at ADM.Sharepoint.SiteAdmin.Web.Services.OperationService.CreateOperation(Operation operation) in C:\\Users\\krishna.nadiminti\\Work\\...\\Services\\OperationService.cs:line 136</p>\r\n</span>\r\n<p></p>\r\n<p>Win identity Name: MyDOMAIN\\MyUserName, SID: S-1-5-21-1078621877-1660878857-569397357-10089, IsSystem: False, ImpersonationLevel: Impersonation</p>\r\n<p></p>\r\n<p>Thread identity: MyDOMAIN\\MyUserName</p>\r\n<p>Svc Ctxt identity: MyDOMAIN\\MyUserName</p>\r\n<p></p>\r\n<p></p>\r\n<p>LogonType:Password</p>\r\n<p></p>\r\n<p>UserId:MyDOMAIN\\\\MyUserName</p>\r\n<p></p>\r\n<p>RunLevel:Highest</p>\r\n<p>DisplayName:</p>\r\n<p>Id:</p>\r\n<p></p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p></p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<hr>\r\n<p></p>\r\n<p>My code:&nbsp;(the part that does not work is commented out - but I&nbsp;need that to work) :</p>\r\n<hr>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>            <span style=\"color:blue\">var</span> logonDetails = <span style=\"color:blue\">string</span>.Empty;\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                <span style=\"color:blue\">using</span> (<span style=\"color:blue\">var</span> ts = GetTaskService())\r\n                {\r\n                    <span style=\"color:blue\">var</span> folder = ts.RootFolder.SubFolders.FirstOrDefault(f =&gt; f.Name == FolderName);\r\n                    <span style=\"color:blue\">if</span> (folder == <span style=\"color:blue\">null</span>)\r\n                    {\r\n                        folder = ts.RootFolder.CreateFolder(FolderName);\r\n                    }\r\n\r\n                    <span style=\"color:blue\">var</span> taskNameToGenerate = operation.GetTaskName();\r\n                    <span style=\"color:blue\">if</span> (folder.Tasks.Count(t =&gt; t.Name == taskNameToGenerate) &gt;= 1)\r\n                    {\r\n                        <span style=\"color:blue\">throw</span> <span style=\"color:blue\">new</span> ValidationException(<span style=\"color:blue\">string</span>.Format(ValidationErrorResources.ValidationErrorOperationAlreadyExists, taskNameToGenerate));\r\n                    }\r\n\r\n                    <span style=\"color:blue\">var</span> taskDef = ts.NewTask();\r\n                    taskDef.Settings.Compatibility = TaskCompatibility.V2;\r\n\r\n                    taskDef.Data = SerializeOperation(operation);\r\n                    taskDef.RegistrationInfo.Source = <span style=\"color:#a31515\">&quot;Parish Admin Site Tool&quot;</span>;\r\n                    taskDef.RegistrationInfo.Description = <span style=\"color:#a31515\">&quot;Created by the Parish Admin Site Tool&quot;</span>;\r\n\r\n                    <span style=\"color:blue\">var</span> execAction = <span style=\"color:blue\">new</span> ExecAction(GetTaskExecActionCommand(), GetTaskExecActionArgs(operation));\r\n                    taskDef.Actions.Add(execAction);\r\n                    taskDef.Triggers.Add(<span style=\"color:blue\">new</span> TimeTrigger(operation.Scheduled));\r\n\r\n                    <span style=\"color:green\">//COMMENTED OUT since this doesn't seem to work: but we need it to run the task with the highest privilege, regardless of whether the user is logged on or not.</span></pre>\r\n<pre><span style=\"color:green\">\t\t  //taskDef.Principal.UserId = this.ServiceContext.User.Identity.Name; //commented out </span>\r\n                    <span style=\"color:green\">//taskDef.Principal.RunLevel = TaskRunLevel.Highest; //TODO do we need this? on Win7, I get access denied, on Win 2008, COMException</span>\r\n                    <span style=\"color:green\">//taskDef.Principal.LogonType = TaskLogonType.Password;</span>\r\n                    <span style=\"color:green\">//logonDetails = &quot;LogonType:&quot; &#43; taskDef.Principal.LogonType.ToString();</span>\r\n                    <span style=\"color:green\">//logonDetails &#43;= &quot;\\nUserId:&quot; &#43; taskDef.Principal.UserId;</span>\r\n                    <span style=\"color:green\">//logonDetails &#43;= &quot;\\nRunLevel:&quot; &#43; taskDef.Principal.RunLevel;</span>\r\n                    <span style=\"color:green\">//logonDetails &#43;= &quot;\\nDisplayName:&quot; &#43; taskDef.Principal.DisplayName;</span>\r\n                    <span style=\"color:green\">//logonDetails &#43;= &quot;\\nId:&quot; &#43; taskDef.Principal.Id;</span>\r\n\r\n                    <span style=\"color:blue\">var</span> task = folder.RegisterTaskDefinition(taskNameToGenerate, taskDef);\r\n\r\n                    <span style=\"color:green\">//var task = folder.RegisterTaskDefinition(taskNameToGenerate, taskDef,</span>\r\n                    <span style=\"color:green\">//    TaskCreation.Create,</span>\r\n                    <span style=\"color:green\">//    taskDef.Principal.UserId, operation.PasswordForNonInteractiveUser, TaskLogonType.Password);</span>\r\n\r\n                    <span style=\"color:blue\">var</span> path = task.Path;\r\n                    task.Dispose();\r\n\r\n                    operation.GeneratedId = path;\r\n                }\r\n            }\r\n            <span style=\"color:blue\">catch</span> (Exception ex) <span style=\"color:green\">//a bit ugly, but this will do for this simple utility</span>\r\n\r\n<hr></pre>\r\n<pre>Any ideas / help, greatly appreciated.</pre>\r\n<pre>Regards,</pre>\r\n<pre>Krishna</pre>\r\n</div>\r\n",
    "PostedDate": "2011-08-10T00:29:29.697-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "656541",
    "ThreadId": "268490",
    "Html": "<p>Do not set the Principal.UserId or LogonType properties by assignment in code. Use the parameters in the RegisterTaskDefinition method to set the username, password, and logon type as noted below. Please note that the username must be in the \"domain\\username\" format. I believe your code only pulls the username.</p>\r\n<pre>folder.RegisterTaskDefinition(taskNameToGenerate, taskDef, TaskCreation.Create, <span style=\"color: #a31515;\">\"domain\\userid\"</span>, <span style=\"color: #a31515;\">\"password\"</span>, TaskLogonType.Password);</pre>",
    "PostedDate": "2011-08-11T06:53:21.583-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]