[
  {
    "Id": "1457212",
    "ThreadId": "649322",
    "Html": "For tasks created through this library, the 'Created' date is blank.<br />\n",
    "PostedDate": "2015-12-26T05:09:20.71-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1457228",
    "ThreadId": "649322",
    "Html": "This is not a bug, but looks a lot like one. The Microsoft documentation says that the ITaskRegistrationInfo::Date property is set when a task is registered. It appears that this is not the case and that that value, if never set, will always return 'null' which translates in the library to DateTime.MinValue. So, as a work around, in the next release, the Task class exposes a new method, GetLastRegistrationTime(), which will go through all known paths to try and determine when the task was last registered. Given that it may have to comb through the entire event log, this method could take a bunch of time. If task event logging is not enabled for the machine, this method won't give any more information than that which can be retrieved via the Date property.<br />\n",
    "PostedDate": "2015-12-26T14:51:37.787-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2015-12-30T08:01:51.69-08:00"
  },
  {
    "Id": "1457235",
    "ThreadId": "649322",
    "Html": "If the Create Date property is not set automatically upon initial registration, couldn't your library set it?<br />\n",
    "PostedDate": "2015-12-26T18:13:27.75-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1457363",
    "ThreadId": "649322",
    "Html": "That's exactly what I did in the 2.5.9 release.<br />\n",
    "PostedDate": "2015-12-28T10:28:18.1-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2015-12-30T08:01:53.063-08:00"
  },
  {
    "Id": "1457367",
    "ThreadId": "649322",
    "Html": "Confirmed. Works well now  :o)<br />\n",
    "PostedDate": "2015-12-28T10:45:11.187-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]