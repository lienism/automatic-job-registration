[
  {
    "Id": "930869",
    "ThreadId": "400413",
    "Html": "\r\n<p>I am trying to create a scheduled task using Win32.TaskScheduler. I need to create it at the logon event (the code below is called at logon). The user who is creating the task (always just a domain user) has to have the rights to create Scheduled Tasks.\r\n I have accomplished this as if I use the code below then the scheduled task is created (I have given rights on the Tasks folder to domain users).</p>\r\n<p>As you can see from the code, I am creating the task under the rights assigned to the person currently logged in:\r\n<strong>(<span style=\"text-decoration:underline\">userId = string.Concat(Environment.UserDomainName, &quot;\\\\&quot;, Environment.UserName</span>);</strong></p>\r\n<p>The <strong><span style=\"text-decoration:underline\">userid </span></strong>(currently logged on user) is what appears under the heading &quot;when running the task use the following user account&quot; when the task is created.</p>\r\n<p>However, I need to run the task <strong><span style=\"text-decoration:underline\">when the user is logged out</span></strong>. When the code below is run, the task is created with the box &quot;run while user is logged out&quot; ticked so I thought this would ensure\r\n the task runs while the user is logged out <span style=\"text-decoration:underline\">\r\nbut it doesn't</span>. I have discovered it will only run while the user is logged out\r\n<span style=\"text-decoration:underline\">if the task created by the code below also has\r\n</span><span style=\"text-decoration:underline\">the box &quot;runs with highest priveleges&quot; ticked\r\n</span>. No problem I thought;I just added the line <strong><span style=\"text-decoration:underline\">tdall.Principal.RunLevel = TaskRunLevel.Highest</span></strong>.</p>\r\n<p>However when I do this it gives me an <strong>access denied</strong> error in the catch block. This makes no sense because I can manually change the run level on the PC while logged on as the user the code is running under (by ticking the box &quot;runs with\r\n highest priveleges&quot;).</p>\r\n<p>I tried it another way by removing the line that causes the error (<strong>tdall.Principal.RunLevel = TaskRunLevel.Highest</strong>.) and also changing the line</p>\r\n<p><strong>&nbsp;ts.RootFolder.RegisterTaskDefinition(taskName, tdall, TaskCreation.CreateOrUpdate, userId, LogonType: TaskLogonType.S4U);</strong></p>\r\n<p>to</p>\r\n<p><strong>&nbsp;ts.RootFolder.RegisterTaskDefinition(taskName, tdall, TaskCreation.CreateOrUpdate, &quot;SYSTEM&quot;, LogonType: TaskLogonType.S4U);</strong></p>\r\n<p>This is because entering &quot;<strong><span style=\"text-decoration:underline\">SYSTEM</span>&quot;\r\n</strong>guarantees a task will run while logged out.<strong>&nbsp;</strong></p>\r\n<p><strong><span style=\"text-decoration:underline\">SYSTEM </span></strong>will appear under the heading &quot;<span style=\"text-decoration:underline\">when running the task use the following user account&quot;</span>.</p>\r\n<p>However, when I try to do this, I also get&nbsp; <strong>access denied</strong> error in the catch block.</p>\r\n<p>If I log on as Administrator I can do all of the above no problem. As I say, it makes no sense as the Domain user has the same rights as the Administrator on the\r\n<strong>Tasks </strong>folder.</p>\r\n<p>Any help would be appreciated, thanks &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<pre><span>try</span><span>\n                        </span><span>{</span><span>\n                            </span><span>string</span><span> userId </span><span>=</span><span> </span><span>string</span><span>.</span><span>Concat</span><span>(</span><span>Environment</span><span>.</span><span>UserDomainName</span><span>,</span><span> </span><span class=\"str\">&quot;\\\\&quot;</span><span>,</span><span> </span><span>Environment</span><span>.</span><span>UserName</span><span>);</span><span>\n\n\n                           \n                            </span><span>TaskDefinition</span><span> tdall </span><span>=</span><span> ts</span><span>.</span><span>NewTask</span><span>();</span><span>\n                            userId </span><span>=</span><span> </span><span>string</span><span>.</span><span>Concat</span><span>(</span><span>Environment</span><span>.</span><span>UserDomainName</span><span>,</span><span> </span><span class=\"str\">&quot;\\\\&quot;</span><span>,</span><span> </span><span>Environment</span><span>.</span><span>UserName</span><span>);</span><span>\n                           \n                            tdall</span><span>.</span><span>RegistrationInfo</span><span>.</span><span>Description</span><span> </span><span>=</span><span> schtask</span><span>.</span><span>ToString</span><span>()</span><span> </span><span>&#43;</span><span> i</span><span>.</span><span>ToString</span><span>();</span><span>\n                            tdall</span><span>.</span><span>Principal</span><span>.</span><span>LogonType</span><span> </span><span>=</span><span> </span><span>TaskLogonType</span><span>.</span><span>S4U</span><span>;</span><span>\n                            tdall</span><span>.</span><span>Principal</span><span>.</span><span>RunLevel</span><span> </span><span>=</span><span> </span><span>TaskRunLevel</span><span>.</span><span>Highest</span><span>;</span><span>\n                            tdall</span><span>.</span><span>Principal</span><span>.</span><span>UserId</span><span> </span><span>=</span><span> userId</span><span>;</span><span>\n                           \n                            </span><span>DailyTrigger</span><span> dtall </span><span>=</span><span> </span><span>new</span><span> </span><span>DailyTrigger</span><span>();</span><span>\n\n                            </span><span>// Add a trigger that will fire the task at this time every day</span><span>\n                            dtall </span><span>=</span><span> </span><span>(</span><span>DailyTrigger</span><span>)</span><span>tdall</span><span>.</span><span>Triggers</span><span>.</span><span>Add</span><span>(</span><span>new</span><span> </span><span>DailyTrigger</span><span> </span><span>{</span><span> </span><span>DaysInterval</span><span> </span><span>=</span><span> </span><span>1</span><span> </span><span>});</span><span>\n                            dtall</span><span>.</span><span>StartBoundary</span><span> </span><span>=</span><span> schtime</span><span>;</span><span>\n\n\n                            tdall</span><span>.</span><span>Actions</span><span>.</span><span>Add</span><span>(</span><span>new</span><span> </span><span>ExecAction</span><span>(</span><span class=\"str\">&quot;psshutdown.exe&quot;</span><span>,</span><span> </span><span class=\"str\">&quot;-d -accepteula&quot;</span><span>,</span><span> </span><span>@</span><span class=\"str\">&quot;C:\\EnergyWatchIT\\App_Files\\&quot;));\n\n                            i&#43;&#43;;\n                            string taskName = &quot;</span><span>EWITSchedSleepAll</span><span class=\"str\">&quot; &#43; schtask.ToString() &#43; i.ToString();\n\n                            \n\n                            ts.RootFolder.RegisterTaskDefinition(taskName, tdall, TaskCreation.CreateOrUpdate, userId, LogonType: TaskLogonType.S4U);\n\n\n\n                            \n                        }\n                        catch (Exception j)\n                        {\n                            Logger.append(&quot;</span><span>j </span><span>is</span><span>  </span><span class=\"str\">&quot; &#43; j.Message &#43; Environment.NewLine &#43; j.StackTrace, Logger.ALL);\n                            MessageBox.Show(&quot;</span><span>j </span><span>is</span><span> </span><span class=\"str\">&quot; &#43; j.ToString());\n                        }<pre>\n\n</pre>\n</span></pre>\r\n",
    "PostedDate": "2012-10-23T00:51:08.003-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "930870",
    "ThreadId": "400413",
    "Html": "<div class=\"body\">\r\n<p>I think it is maybe a problem with the permissions set to the domain user on the server and a way around it might be to <span style=\"text-decoration: underline;\">create a unique user account on the domain for task scheduler to use</span> and then&nbsp; hardcode the user values into the code above (assign them to the variable <strong>userid</strong>).</p>\r\n<p>I would rather not do this though.</p>\r\n</div>",
    "PostedDate": "2012-10-23T00:51:42.63-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "931093",
    "ThreadId": "400413",
    "Html": "<p>Which operating system are you running this on and will you provide the constructor in your code for TaskService? I think this may be a problem with the version of the underlying COM library.</p>",
    "PostedDate": "2012-10-23T07:18:46.063-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "931139",
    "ThreadId": "400413",
    "Html": "\r\n<p>It's Windows 7.</p>\r\n<p>The entire code is below: </p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>\n                <span style=\"color:blue\">using</span> (TaskService ts = <span style=\"color:blue\">new</span> TaskService())\n                {\n                    <span style=\"color:green\">// Create a new task definition and assign properties</span>\n\n\n\n                    <span style=\"color:blue\">if</span> (schday == <span style=\"color:#a31515\">&quot;ALL&quot;</span>)\n                    {\n\n<span style=\"color:blue\">try</span>\n                        {\n                            <span style=\"color:blue\">string</span> userId = <span style=\"color:blue\">string</span>.Concat(Environment.UserDomainName, &quot;\\\\&quot;, Environment.UserName);\n\n\n                           \n                            TaskDefinition tdall = ts.NewTask();\n                            userId = <span style=\"color:blue\">string</span>.Concat(Environment.UserDomainName, &quot;\\\\&quot;, Environment.UserName);\n                           \n                            tdall.RegistrationInfo.Description = schtask.ToString() &#43; i.ToString();\n                            tdall.Principal.LogonType = TaskLogonType.S4U;\n                            tdall.Principal.RunLevel = TaskRunLevel.Highest;\n                            tdall.Principal.UserId = userId;\n                           \n                            DailyTrigger dtall = <span style=\"color:blue\">new</span> DailyTrigger();\n\n                            <span style=\"color:green\">// Add a trigger that will fire the task at this time every day</span>\n                            dtall = (DailyTrigger)tdall.Triggers.Add(<span style=\"color:blue\">new</span> DailyTrigger { DaysInterval = 1 });\n                            dtall.StartBoundary = schtime;\n\n\n                            tdall.Actions.Add(<span style=\"color:blue\">new</span> ExecAction(<span style=\"color:#a31515\">&quot;psshutdown.exe&quot;</span>, <span style=\"color:#a31515\">&quot;-d -accepteula&quot;</span>, <span style=\"color:#a31515\">@&quot;C:\\EnergyWatchIT\\App_Files\\&quot;</span>));\n\n                            i&#43;&#43;;\n                            <span style=\"color:blue\">string</span> taskName = <span style=\"color:#a31515\">&quot;EWITSchedSleepAll&quot;</span> &#43; schtask.ToString() &#43; i.ToString();\n\n                            \n\n                            ts.RootFolder.RegisterTaskDefinition(taskName, tdall, TaskCreation.CreateOrUpdate, userId, LogonType: TaskLogonType.S4U);\n\n\n\n                            \n                        }\n                        <span style=\"color:blue\">catch</span> (Exception j)\n                        {\n                            Logger.append(<span style=\"color:#a31515\">&quot;j is  &quot;</span> &#43; j.Message &#43; Environment.NewLine &#43; j.StackTrace, Logger.ALL);\n                            MessageBox.Show(<span style=\"color:#a31515\">&quot;j is &quot;</span> &#43; j.ToString());\n                        }\n\n<span style=\"color:blue\">try</span>\n                        {\n                            <span style=\"color:blue\">string</span> userId = <span style=\"color:blue\">string</span>.Concat(Environment.UserDomainName, &quot;\\\\&quot;, Environment.UserName);\n\n\n                           \n                            TaskDefinition tdall = ts.NewTask();\n                            userId = <span style=\"color:blue\">string</span>.Concat(Environment.UserDomainName, &quot;\\\\&quot;, Environment.UserName);\n                           \n                            tdall.RegistrationInfo.Description = schtask.ToString() &#43; i.ToString();\n                            tdall.Principal.LogonType = TaskLogonType.S4U;\n                            tdall.Principal.RunLevel = TaskRunLevel.Highest;\n                            tdall.Principal.UserId = userId;\n                           \n                            DailyTrigger dtall = <span style=\"color:blue\">new</span> DailyTrigger();\n\n                            <span style=\"color:green\">// Add a trigger that will fire the task at this time every day</span>\n                            dtall = (DailyTrigger)tdall.Triggers.Add(<span style=\"color:blue\">new</span> DailyTrigger { DaysInterval = 1 });\n                            dtall.StartBoundary = schtime;\n\n\n                            tdall.Actions.Add(<span style=\"color:blue\">new</span> ExecAction(<span style=\"color:#a31515\">&quot;psshutdown.exe&quot;</span>, <span style=\"color:#a31515\">&quot;-d -accepteula&quot;</span>, <span style=\"color:#a31515\">@&quot;C:\\EnergyWatchIT\\App_Files\\&quot;</span>));\n\n                            i&#43;&#43;;\n                            <span style=\"color:blue\">string</span> taskName = <span style=\"color:#a31515\">&quot;EWITSchedSleepAll&quot;</span> &#43; schtask.ToString() &#43; i.ToString();\n\n                            \n\n                            ts.RootFolder.RegisterTaskDefinition(taskName, tdall, TaskCreation.CreateOrUpdate, userId, LogonType: TaskLogonType.S4U);\n\n\n\n                            \n                        }\n                        <span style=\"color:blue\">catch</span> (Exception j)\n                        {\n                            Logger.append(<span style=\"color:#a31515\">&quot;j is  &quot;</span> &#43; j.Message &#43; Environment.NewLine &#43; j.StackTrace, Logger.ALL);\n                            MessageBox.Show(<span style=\"color:#a31515\">&quot;j is &quot;</span> &#43; j.ToString());\n                        }\n\n\n\n\n</pre>\r\n</div>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>  <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> sleepmethod(String schtask, String schday, DateTime schtime, <span style=\"color:blue\">int</span> i)\n        {\n\n            <span style=\"color:blue\">try</span>\n            {\n\n\n                <span style=\"color:blue\">using</span> (TaskService ts = <span style=\"color:blue\">new</span> TaskService())\n                {\n                    <span style=\"color:green\">// Create a new task definition and assign properties</span>\n\n\n\n                    <span style=\"color:blue\">if</span> (schday == <span style=\"color:#a31515\">&quot;ALL&quot;</span>)\n                    {\n                        <span style=\"color:blue\">try</span>\n                        {\n                            <span style=\"color:blue\">string</span> userId = <span style=\"color:blue\">string</span>.Concat(Environment.UserDomainName, &quot;\\\\&quot;, Environment.UserName);\n\n\n                            MessageBox.Show(<span style=\"color:#a31515\">&quot;In try&quot;</span>);\n                            TaskDefinition tdall = ts.NewTask();\n                            userId = <span style=\"color:blue\">string</span>.Concat(Environment.UserDomainName, &quot;\\\\&quot;, Environment.UserName);\n                            MessageBox.Show(userId);\n                            tdall.RegistrationInfo.Description = schtask.ToString() &#43; i.ToString();\n                            tdall.Principal.LogonType = TaskLogonType.S4U;\n                            tdall.Principal.GroupId = <span style=\"color:#a31515\">&quot;Users&quot;</span>;\n                            <span style=\"color:green\">//tdall.Principal.RunLevel = TaskRunLevel.Highest;</span>\n                            tdall.Principal.UserId = userId;\n                           \n                            DailyTrigger dtall = <span style=\"color:blue\">new</span> DailyTrigger();\n\n                            <span style=\"color:green\">// Add a trigger that will fire the task at this time every day</span>\n                            dtall = (DailyTrigger)tdall.Triggers.Add(<span style=\"color:blue\">new</span> DailyTrigger { DaysInterval = 1 });\n                            dtall.StartBoundary = schtime;\n\n\n                            tdall.Actions.Add(<span style=\"color:blue\">new</span> ExecAction(<span style=\"color:#a31515\">&quot;psshutdown.exe&quot;</span>, <span style=\"color:#a31515\">&quot;-d -accepteula&quot;</span>, <span style=\"color:#a31515\">@&quot;C:\\EnergyWatchIT\\App_Files\\&quot;</span>));\n\n                            i&#43;&#43;;\n                            <span style=\"color:blue\">string</span> taskName = <span style=\"color:#a31515\">&quot;EWITSchedSleepAll&quot;</span> &#43; schtask.ToString() &#43; i.ToString();\n\n\n\n                            ts.RootFolder.RegisterTaskDefinition(taskName, tdall, TaskCreation.CreateOrUpdate, <span style=\"color:#a31515\">&quot;NETWORK SERVICE&quot;</span>, LogonType: TaskLogonType.Group);\n\n\n\n                            \n                        }\n                        <span style=\"color:blue\">catch</span> (Exception j)\n                        {\n                            Logger.append(<span style=\"color:#a31515\">&quot;j is  &quot;</span> &#43; j.Message &#43; Environment.NewLine &#43; j.StackTrace, Logger.ALL);\n                            MessageBox.Show(<span style=\"color:#a31515\">&quot;j is &quot;</span> &#43; j.ToString());\n                        }\n                    }\n\n}\n}\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-10-23T08:11:20.057-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]