[
  {
    "Id": "1360825",
    "ThreadId": "584896",
    "Html": "<strong>1.\tHow to query historical task log with   specified condition like  “time create”, “correlation ID”..</strong><br />\n<br />\nGenertal code<br />\n<pre><code>public static void SchedulerHistory(string schedulerName)\n{            \n            using (TaskService ts = new TaskService())\n            {\n                Microsoft.Win32.TaskScheduler.Task task = ts.GetTask(schedulerName);\n                TaskEventLog eventLogs = new TaskEventLog(task.Path);\n                foreach (TaskEvent log in eventLogs)\n                {                    \n                    string level = log.Level;\n                    DateTime? dateTime = log.TimeCreated;\n                    int eventId = log.EventId;\n                    string taskCategory = log.TaskCategory;\n                    string code = log.OpCode;\n                }\n            }\n}   \n</code></pre>\n\nMy code need to apply  condition to query<br />\n1.I need to apply correlation ID as criteria to query.<br />\n2.I get correlationID   from RunningTaskCollection of a task and use it to query history task later<br />\n<pre><code>Microsoft.Win32.TaskScheduler.Task task = GetTask(groupName);\n// GetTask is my method that detail of this  have been written as you.\nRunningTaskCollection runningTaskList = task.GetInstances();\n\n\n    for (int i = 0; i &lt; runningTaskList.Count; i++){\n\n        Guid correlationID = runningTaskList[i].InstanceGuid;\n _      List&lt;TaskEvent&gt; list = (new TaskEventLog(path)).Where(lg =&gt; lg.ActivityId == correlationID).OrderBy(log =&gt; log.TimeCreated).Take(1).ToList();_\n                foreach (TaskEvent log in list)\n                {      \n\n              // do something as my business logic              \n                    string level = log.Level;\n                    DateTime? dateTime = log.TimeCreated;\n                    int eventId = log.EventId;\n                    string taskCategory = log.TaskCategory;\n                    string code = log.OpCode;\n                }\n}</code></pre>\n\nMy business logic  is that I need  to get first record of each transaction  in history task with either correlationID  or TimeCreated  for doing something later as figure below.<br />\n<br />\nAs per my code, I take correlationID as condition, I  am not sure whether  this code  is  correct and efficient statement for  getting  task with LINQ .<br />\nIt seem pretty  slow because this statement has to load all records in history     with   “(new TaskEventLog(path))”   and then using LINQ  to query as conditin  later.<br />\n<br />\n<img src=\"http://i62.tinypic.com/34no74o.jpg\" alt=\"Image\" /><br />\n<br />\n<br />\n<strong>2.\tHow to list all instances of each specified task name  not only running instance but also  finished instance (completed and error instance)</strong><br />\n As far as I know, I can list only running instance from  a task with  below code.<br />\n<pre><code>Microsoft.Win32.TaskScheduler.Task task = GetTask(groupName);\n// GetTask is my method that detail of this  have been written as you.\nRunningTaskCollection runningTaskList = task.GetInstances();</code></pre>\n\nHowever , I would like to get every instance of task both running and history. <br />\nAre there any ways to do this besides getting from historical task?.<br />\n",
    "PostedDate": "2015-03-08T22:36:16.3-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1362531",
    "ThreadId": "584896",
    "Html": "1) Look at the CorrelatedTaskEvent class in the TaskSchedulerEditor library. I believe it meets your requirements. If not, the code for that class should give you some ideas on how to pull the history from the EventLog using your code.\r<br />\n2) The GetInstances method only gets running instances. For historical instances, you will have to pull them from the EventLog.<br />\n",
    "PostedDate": "2015-03-11T09:55:12.69-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2015-09-01T10:02:19.543-07:00"
  }
]