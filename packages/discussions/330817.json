[
  {
    "Id": "783609",
    "ThreadId": "330817",
    "Html": "<p>Hi!!</p>\n<p>I am facing a problem while creating a task which is triggered on log on of any user but which uses the credentials of a specific user. I am getting a Access Denied Exception while trying to do so.</p>\n<p>After reading the comments for the GroupId property which is as follows:</p>\n<p><em>If you want a task to be triggered when any member of a group logs on to the computer rather than when a specific user logs on, then do not assign a value to the LogonTrigger.UserId property. Instead, create a logon trigger with an empty LogonTrigger.UserId  property and assign a value to the principal for the task using the Principal.GroupId property.</em></p>\n<p>i tried setting the Group id as well but was left with the same result. &nbsp;Please help me to create a task with this requirement.</p>\n<p>The code that i am using currently is as follows:</p>\n<div style=\"color: black; background-color: white;\">\n<pre><pre><div style=\"color: black; background-color: white;\"><pre><span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> ConfigureTaskDefinition(Schedule schedule, TaskDefinition taskDefinition)\n        {\n            <span style=\"color: blue;\">if</span> (schedule.RunEvenIfNotLoggedOn)\n                taskDefinition.Principal.LogonType = TaskLogonType.InteractiveTokenOrPassword;\n            <span style=\"color: blue;\">else</span>\n                taskDefinition.Principal.LogonType = TaskLogonType.InteractiveToken;\n\n            <span style=\"color: blue;\">if</span> (!_isV2TaskScheduler.Value &amp;&amp; !schedule.RunEvenIfNotLoggedOn)\n                taskDefinition.Settings.RunOnlyIfLoggedOn = <span style=\"color: blue;\">true</span>;\n\n            taskDefinition.Principal.UserId =<span style=\"color: #a31515;\">\"MyDomain\\\\User1\"</span>;\n                 \n\n            taskDefinition.RegistrationInfo.Author = GetTaskAuthorName(schedule.ProductLongName);\n\n            taskDefinition.RegistrationInfo.Description = <span style=\"color: blue;\">string</span>.IsNullOrEmpty(schedule.Description)\n                                                              ? <span style=\"color: blue;\">string</span>.Empty\n                                                              : schedule.Description;\n\n            taskDefinition.Settings.DisallowStartIfOnBatteries = schedule.RunIfComputerIsOnACPower;\n\n            taskDefinition.Settings.Enabled = schedule.Enable;\n\n          <span style=\"color: blue;\">using</span> (<span style=\"color: blue;\">var</span> win32Trigger = <span style=\"color: blue;\">new</span> Microsoft.Win32.TaskScheduler.LogOnTrigger{UserId=<span style=\"color: #a31515;\">\"MyDomain\\\\User2\"</span>})\n                {\n                    taskDefinition.Principal.GroupId = <span style=\"color: #a31515;\">\"Users\"</span>;\n                    \n                    taskDefinition.Triggers.Add(win32Trigger);\n                }\n\n            AddAction(schedule, taskDefinition);\n        }\n</pre>\n</div>\n</pre>\nNote: Here 'Schedule' is a class which we use to store information retrieved from the user.</pre>\n</div>",
    "PostedDate": "2012-02-20T02:58:25.617-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]