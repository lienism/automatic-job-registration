[
  {
    "Id": "1485757",
    "ThreadId": "658636",
    "Html": "Was wondering if anyone knew how to set the data property and then retrieve it again from a created task.<br />\n\r<br />\nSet TaskDefinition.Data to:<br />\n<pre><code>TEST</code></pre>\n\nAfter task is created exported XML Data Node:<br />\n<pre><code>&lt;![CDATA[0001000000ffffffff01000000000000000401000000e20153797374656d2e436f6c6c656374696f6e732e47656e657269632e44696374696f6e61727960325b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d2c5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d040000000756657273696f6e08436f6d7061726572084861736853697a650d4b657956616c756550616972730003000308920153797374656d2e436f6c6c656374696f6e732e47656e657269632e47656e65726963457175616c697479436f6d706172657260315b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d08e60153797374656d2e436f6c6c656374696f6e732e47656e657269632e4b657956616c75655061697260325b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d2c5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d5b5d0200000009020000000300000009030000000402000000920153797374656d2e436f6c6c656374696f6e732e47656e657269632e47656e65726963457175616c697479436f6d706172657260315b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d00000000070300000000010000000200000003e40153797374656d2e436f6c6c656374696f6e732e47656e657269632e4b657956616c75655061697260325b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d2c5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d04fcffffffe40153797374656d2e436f6c6c656374696f6e732e47656e657269632e4b657956616c75655061697260325b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d2c5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d02000000036b65790576616c75650101060500000004446174610606000000045445535401f9fffffffcffffff06080000000a416374696f6e547970650a0b]]&gt;</code></pre>\n\nWhen retrieving the Task.TaskDefinition.Data property again:<br />\n<pre><code>0001000000ffffffff01000000000000000401000000e20153797374656d2e436f6c6c656374696f6e732e47656e657269632e44696374696f6e61727960325b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d2c5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d040000000756657273696f6e08436f6d7061726572084861736853697a650d4b657956616c756550616972730003000308920153797374656d2e436f6c6c656374696f6e732e47656e657269632e47656e65726963457175616c697479436f6d706172657260315b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d08e60153797374656d2e436f6c6c656374696f6e732e47656e657269632e4b657956616c75655061697260325b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d2c5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d5b5d0200000009020000000300000009030000000402000000920153797374656d2e436f6c6c656374696f6e732e47656e657269632e47656e65726963457175616c697479436f6d706172657260315b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d00000000070300000000010000000200000003e40153797374656d2e436f6c6c656374696f6e732e47656e657269632e4b657956616c75655061697260325b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d2c5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d04fcffffffe40153797374656d2e436f6c6c656374696f6e732e47656e657269632e4b657956616c75655061697260325b5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d2c5b53797374656d2e537472696e672c206d73636f726c69622c2056657273696f6e3d342e302e302e302c2043756c747572653d6e65757472616c2c205075626c69634b6579546f6b656e3d623737613563353631393334653038395d5d02000000036b65790576616c75650101060500000004446174610606000000045445535401f9fffffffcffffff06080000000a416374696f6e547970650a0b</code></pre>\n\nI'm missing something, Any help is appreciated.  Examples would be amazing!\r<br />\n<br />\nThanks\r<br />\n<br />\nJoey<br />\n",
    "PostedDate": "2016-10-10T18:23:53.4-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1485761",
    "ThreadId": "658636",
    "Html": "Found msdn requirements, which was the cause of my problem.\r<br />\n<br />\n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa382552(v=vs.85).aspx\" rel=\"nofollow\">https://msdn.microsoft.com/en-us/library/windows/desktop/aa382552(v=vs.85).aspx</a>\r<br />\n<br />\nRequirements:\r<br />\nMinimum supported client - Windows Vista [desktop apps only]\r<br />\nMinimum supported server - Windows Server 2008 [desktop apps only]\r<br />\nType library - Taskschd.tlb\r<br />\nDLL - Taskschd.dll\r<br />\n<br />\n<br />\nI changed the constuctor I used for TaskService to resolve the problem.\r<br />\n<br />\nfrom:<br />\n<pre><code>using (TaskService ts = new TaskService(Environment.MachineName, null, null, null, true)) { ... }</code></pre>\n\nto:<br />\n<pre><code>using (TaskService ts = new TaskService()) { ... }</code></pre>\n\n",
    "PostedDate": "2016-10-10T19:50:24.697-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2016-10-10T19:50:38.773-07:00"
  },
  {
    "Id": "1485985",
    "ThreadId": "658636",
    "Html": "You discovered the little secret behind wrapper compatibility between v1 and v2 -- I used the native Data property to store all the other properties that are missing in v1. Thus, when you look at the XML, you will see serialized data encoded for XML. When you use the library (under v1) you should see all the properties exactly as they were set.<br />\n",
    "PostedDate": "2016-10-13T06:50:17.887-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2016-10-13T06:50:25.64-07:00"
  }
]