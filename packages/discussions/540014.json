[
  {
    "Id": "1226214",
    "ThreadId": "540014",
    "Html": "<pre><code>TaskEditDialog editorForm = new TaskEditDialog( );\neditorForm.Editable = true;\neditorForm.RegisterTaskOnAccept = true;\neditorForm.Initialize( SelectedTask );\neditorForm.ShowDialog( );</code></pre>\n\nI know there are other questions about this issue but I've not found a solution in those other questions.\r<br />\n<br />\nMy application registers 3 x Tasks during installation. I want the tasks to run &quot;Run whether user is logged on or not&quot; so I need the user to enter their password at some stage. (Running the Tasks as SYSTEM will not work for my app).\r<br />\n<br />\nI have a GridControl which loads the Tasks from a particular Folder as ItemsSource. Selecting a Task in the GridControl and Clicking the Editor button shows that Task in the TaskEditDialog.\r<br />\n<br />\nWith RegisterTaskOnAccept set to True clicking OK on the TaskEditDialog shows the NullReferenceException. Clicking Cancel doesn't.\r<br />\nAlso using this method, selecting the &quot;Run whether user is logged on or not&quot; radio button shows the Password Dialog when it's OK button is clicked it shows the same NullReferenceException.\r<br />\n<br />\nWith RegisterTaskOnAccept set to false and manually registering the task after the TaskEditDialog has closed then everything works but then how can I get the Password Dialog to show using this method? \r<br />\n<br />\nI've tried this on Windows 7 64bit which is on a Domain and on Windows 7 32bit which is not on a Domain, both with the same result.\r<br />\nUsing .Net4.0 and Nuget to manage TaskSchedulerManagedWrapper (Version 2.0.0)<br />\n<pre><code>\n\nSystem.NullReferenceException: Object reference not set to an instance of an object.\n   at Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTaskDefinition(String Path, TaskDefinition definition, TaskCreation createType, String UserId, String password, TaskLogonType LogonType, String sddl)\n   at Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTaskDefinition(String Path, TaskDefinition definition)\n   at Microsoft.Win32.TaskScheduler.Task.RegisterChanges()\n   at Microsoft.Win32.TaskScheduler.TaskEditDialog.okBtn_Click(Object sender, EventArgs e)\n   at System.Windows.Forms.Control.OnClick(EventArgs e)\n   at System.Windows.Forms.Button.OnClick(EventArgs e)\n   at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)\n   at System.Windows.Forms.Control.WmMouseUp(Message&amp; m, MouseButtons button, Int32 clicks)\n   at System.Windows.Forms.Control.WndProc(Message&amp; m)\n   at System.Windows.Forms.ButtonBase.WndProc(Message&amp; m)\n   at System.Windows.Forms.Button.WndProc(Message&amp; m)\n   at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message&amp; m)\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&amp; m)\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\n</code></pre>\n\n",
    "PostedDate": "2014-03-24T14:35:39.04-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1226895",
    "ThreadId": "540014",
    "Html": "I found a work around to the problem which may help someone else..\r<br />\nMoved my Database to C:\\ProgramData\\AppName.\r<br />\nCreated my Tasks under the SYSTEM account.\r<br />\nRemoved all ScheduleTask editing ability from my application because my application does not run as Administrator so SYSTEM's tasks will not show. Instead, I provided a simple button to open TaskSchd.msc. \r<br />\nThese tasks run whether user is logged in or not and more importantly the user is never asked for their password.<br />\n",
    "PostedDate": "2014-03-26T05:57:58.793-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-04-03T11:07:35.663-07:00"
  }
]