[
  {
    "Id": "998024",
    "ThreadId": "432344",
    "Html": "Hello<br />\n<br />\nI'm trying to integrate it in a web application but I get a com exception. Is it possible to use it in a web application in IIS?<br />\n<br />\nI tried the example on the home page and the code throws an exception when it tries to register the task:  <a href=\"mailto:ts.RootFolder.RegisterTaskDefinition(@&quot;Test&quot;,\" rel=\"nofollow\">ts.RootFolder.RegisterTaskDefinition(@\"Test\",</a> td);<br />\n<br />\n[COMException (0x80041318): (46,4):Task:]<br />\n   Microsoft.Win32.TaskScheduler.V2Interop.ITaskFolder.RegisterTaskDefinition(String Path, ITaskDefinition pDefinition, Int32 flags, Object UserId, Object password, TaskLogonType LogonType, Object sddl) +0<br />\n   Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTaskDefinition(String Path, TaskDefinition definition, TaskCreation createType, String UserId, String password, TaskLogonType LogonType, String sddl) +154<br />\n   Microsoft.Win32.TaskScheduler.TaskFolder.RegisterTaskDefinition(String Path, TaskDefinition definition) +314<br />\n   WebApplication1._Default.AddTask(Object sender, EventArgs e) in C:\\Users\\XXXXXXXXXXX\\Documents\\Visual Studio 2010\\Projects\\WebApplication1\\WebApplication1\\Default.aspx.cs:39<br />\n   System.Web.UI.WebControls.LinkButton.RaisePostBackEvent(String eventArgument) +155<br />\n   System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint) +3707<br />\n",
    "PostedDate": "2013-02-07T09:01:06.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "998098",
    "ThreadId": "432344",
    "Html": "Please search for discussions around IIS and ASP.NET and the permissions required to run in that environment.<br />\n",
    "PostedDate": "2013-02-07T10:31:15.76-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "998375",
    "ThreadId": "432344",
    "Html": "I have already searched the forum and I didn't find anything useful:<br />\n<ol>\n<li>Error Scheduling Task on 2008 R2: &quot;The process must have appropriate permissions to connect to the TaskService&quot;? Where in MSDN, i looked in MSDN  but ...</li>\n<li>Schedule via ASP.NET: Didn't help.</li>\n<li>How to run task under the SYSTEM account without E_ACCESSDENIED: didn't help</li>\n<li>Can't create task on Windows Server 2008: didn't help</li>\n<li>who needs permissions?: &quot;Localhost&quot; didn't work</li>\n<li>Cannot instantiate the TaskService on a WCF service: not my case</li>\n<li>Unable to create tasks from ASP.NET under W2008: &quot;moving from RegisterTaskDefinition to RegisterTask&quot; didn't work</li>\n<li>Access denied when scheduling a task from windows phone application: not my case</li>\n<li>Unable to register task which will run even if user is not logged in: &quot;Yes. You just need to specify the SYSTEM account when you register the task.&quot;, didn't work</li>\n<li>The task XML contains a value which is incorrectly formatted or out of range: not my case</li>\n<li>COMException (18,8) LogonType trying to create task with user id and password : not my case</li>\n<li>Can i access to the editor in asp.net?: Not what I looking for</li>\n<li>View Tasks: Object reference not set to an instance of an object: Not my problem</li>\n<li>\nError on task creation, about LoginType: &quot;TaskLogonType.ServiceAccount&quot;and UserId = &quot;System&quot;&quot;, didn't work.<br />\n</li>\n</ol>\nDid I miss something? Where I have to look? Can you post a link?\r<br />\nWhen this a frequent question is, why do you don't add it to the documentation?<br />\n",
    "PostedDate": "2013-02-08T00:25:03.8-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "998390",
    "ThreadId": "432344",
    "Html": "I have also tried to add IUSER to the Administrators but it didn't work.\r<br />\n<img src=\"http://i.imgur.com/T7Cnvzw.png\" alt=\"Image\" /><br />\n",
    "PostedDate": "2013-02-08T01:22:24.217-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "998636",
    "ThreadId": "432344",
    "Html": "Error 0x80041318 indicates that something in the definition violates either the permissions of what can be registered using the current credentials or violates something that can be registered under the target computer's version of the Task Scheduler. Please post the following to help me better troubleshoot your specific problem:\r<br />\n<br />\n1) Just before calling RegisterTaskDefintion, have your program output the value of the Xml property for the TaskDefinition and post that here.\r<br />\n2) Tell me what user is being used to create the TaskService instance and what their permissions are on the target computer.\r<br />\n3) Tell me what user and TaskLogonType you are using when calling RegisterTaskDefinition and what their permissions are on the target computer.<br />\n",
    "PostedDate": "2013-02-08T09:05:17.48-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "999439",
    "ThreadId": "432344",
    "Html": "Thanks, I used the example on the Home in a asp.net page and I run it in IIS, the user is the &quot;DefaultAppPool&quot; and the domain is &quot;IIS APPPOOL&quot;, the xml:<br />\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-16&quot;?&gt;\n&lt;Task version=&quot;1.2&quot; xmlns=&quot;http://schemas.microsoft.com/windows/2004/02/mit/task&quot;&gt;\n  &lt;RegistrationInfo&gt;\n    &lt;Description&gt;Does something&lt;/Description&gt;\n  &lt;/RegistrationInfo&gt;\n  &lt;Triggers&gt;\n    &lt;CalendarTrigger&gt;\n      &lt;StartBoundary&gt;2013-02-11T08:29:17.372&lt;/StartBoundary&gt;\n      &lt;Enabled&gt;true&lt;/Enabled&gt;\n      &lt;ScheduleByDay&gt;\n        &lt;DaysInterval&gt;2&lt;/DaysInterval&gt;\n      &lt;/ScheduleByDay&gt;\n    &lt;/CalendarTrigger&gt;\n  &lt;/Triggers&gt;\n  &lt;Settings&gt;\n    &lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;\n    &lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;\n    &lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;\n    &lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;\n    &lt;StartWhenAvailable&gt;false&lt;/StartWhenAvailable&gt;\n    &lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;\n    &lt;IdleSettings&gt;\n      &lt;Duration&gt;PT10M&lt;/Duration&gt;\n      &lt;WaitTimeout&gt;PT1H&lt;/WaitTimeout&gt;\n      &lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;\n      &lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;\n    &lt;/IdleSettings&gt;\n    &lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;\n    &lt;Enabled&gt;true&lt;/Enabled&gt;\n    &lt;Hidden&gt;false&lt;/Hidden&gt;\n    &lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;\n    &lt;WakeToRun&gt;false&lt;/WakeToRun&gt;\n    &lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;\n    &lt;Priority&gt;7&lt;/Priority&gt;\n  &lt;/Settings&gt;\n  &lt;Actions&gt;\n    &lt;Exec&gt;\n      &lt;Command&gt;notepad.exe&lt;/Command&gt;\n      &lt;Arguments&gt;c:\\test.log&lt;/Arguments&gt;\n    &lt;/Exec&gt;\n  &lt;/Actions&gt;\n&lt;/Task&gt;</code></pre>\n\nI have tried to add all the permissions for the IUSER to the c:\\windows\\tasks folder and to add the IUSER to the administrators group but I get always the same error. I have tried also to use TaskLogonType.S4U and the TaskLogonType.ServiceAccount but the result was the same.<br />\n<br />\nEDIT:<br />\nI have used the Marshal.ThrowExceptionForHR to check the error code and it turns out to be:<br />\nThe task XML contains a value which is incorrectly formatted or out of range. (Exception from HRESULT: 0x80041318)<br />\nBut if I run the same code not in IIS and therefore the user is my user it works. So I think is a permission problem but the exception has something with the xml to do???<br />\n",
    "PostedDate": "2013-02-10T23:37:41.817-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "999619",
    "ThreadId": "432344",
    "Html": "I completely agree that this is a permissions problem. In looking at the XML you posted I could not find a definitive problem. However, I have some ideas:<br />\n<ul>\n<li>Try setting the Settings.Priority to a lower priority</li>\n<li>\nYour ExecutionTimeLimit is longer than your trigger interval (3 days vs. 2 days)<br />\n</li>\n</ul>\nIf this solution is running on Windows 2008 or later, then setting permissions on the c:\\windows\\tasks folder is meaningless. You are looking at permissions of either how you are connecting to the TaskService instance (in the constructor) or the permissions of the user you are specifying in the RegisterTaskDefinition method. Let me know the details on those two items and I may be able to assist further.<br />\n",
    "PostedDate": "2013-02-11T08:51:43.91-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "999783",
    "ThreadId": "432344",
    "Html": "Thanks I have tried to reduce the priority and the execution time limits but I get the same exception.\r<br />\nFor the moment is running in window 7 to test but after it should run on window 2008.\r<br />\nI use an empty constructor because I don't want to have users and passwords saved in some place, it should work with the the integrated user of IIS.\r<br />\nThe registry task definition is also empty, I have taken the example from the home with the notepad and test.log file.<br />\n<pre><code> // Get the service on the local machine\nusing (TaskService ts = new TaskService())\n{\n    // Create a new task definition and assign properties\n    TaskDefinition td = ts.NewTask();\n    td.RegistrationInfo.Description = &quot;Does something&quot;;\n    td.Settings.Priority = System.Diagnostics.ProcessPriorityClass.Normal;\n    td.Settings.ExecutionTimeLimit = TimeSpan.FromMinutes(1);\n\n    // Create a trigger that will fire the task at this time every other day\n    td.Triggers.Add(new DailyTrigger { DaysInterval = 2 });\n\n    // Create an action that will launch Notepad whenever the trigger fires\n    td.Actions.Add(new ExecAction(&quot;notepad.exe&quot;, &quot;c:\\\\test.log&quot;, null));\n\n    // Register the task in the root folder\n    try { ts.RootFolder.RegisterTaskDefinition(@&quot;Test&quot;, td); }\n    catch (COMException ex) { Marshal.ThrowExceptionForHR(ex.ErrorCode); }\n\n    // Remove the task we just created\n    //ts.RootFolder.DeleteTask(&quot;Test&quot;);\n}</code></pre>\n\nBut I have made a little progress, if I change the identity of the DefaultAppPool to LocalService it works. Can I use the LocalService account to register the task without have to change the identity of the DefaultAppPool?<br />\n",
    "PostedDate": "2013-02-11T16:31:37.867-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1000063",
    "ThreadId": "432344",
    "Html": "Yes. In fact, I would recommend connecting to the TaskService using the LocalService account and then registering the task using the &quot;LocalService&quot; user, no password, and TaskLogonType.ServiceAccount. This is a permissions problem with the limited rights of the IUSER account.<br />\n",
    "PostedDate": "2013-02-12T08:11:53.05-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-04-03T11:38:03.76-07:00"
  },
  {
    "Id": "1000100",
    "ThreadId": "432344",
    "Html": "Ok so it is working, I post it there in case that somebody has the same problem<br />\n<pre><code>using (TaskService ts = new TaskService())\n{\n    // Create a new task definition and assign properties\n    TaskDefinition td = ts.NewTask();\n    td.RegistrationInfo.Description = &quot;Does something&quot;;\n\n    //Setting to run as Local Service whether the user is logged in or not\n    td.Principal.LogonType = TaskLogonType.ServiceAccount;\n    td.Principal.UserId = &quot;LocalService&quot;;\n\n    // Create a trigger that will fire the task at this time every other day\n    td.Triggers.Add(new DailyTrigger { DaysInterval = 2 });\n\n    // Create an action that will launch Notepad whenever the trigger fires\n    td.Actions.Add(new ExecAction(&quot;notepad.exe&quot;, &quot;c:\\\\test.log&quot;, null));\n\n    // Register the task in the root folder\n    try { ts.RootFolder.RegisterTaskDefinition(@&quot;Test&quot;, td, TaskCreation.CreateOrUpdate, &quot;LocalService&quot;, null, TaskLogonType.ServiceAccount); }\n    catch (COMException ex) { Marshal.ThrowExceptionForHR(ex.ErrorCode); }\n\n    // Remove the task we just created\n    ts.RootFolder.DeleteTask(@&quot;Test&quot;);\n}</code></pre>\n\n",
    "PostedDate": "2013-02-12T09:02:28.793-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-04-03T11:38:43.243-07:00"
  },
  {
    "Id": "1000480",
    "ThreadId": "432344",
    "Html": "Ah, now it works in IIS on Windows 7 but not on Windows Server 2008, it throws the following exception:\r<br />\n<br />\nAccess is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r<br />\n<br />\nIf I switch the application pool identity to Local Service it works again ... which is the difference between windows 7 and windows 2008?\r<br />\n<br />\n.Net has a <a href=\"http://msdn.microsoft.com/en-us/library/system.security.principal.windowsidentity.aspx\" rel=\"nofollow\">WindowsIdentity</a> feature that can be used in a <a href=\"http://msdn.microsoft.com/en-us/library/system.security.principal.windowsimpersonationcontext.aspx\" rel=\"nofollow\">WindowsImpersonationContext</a> but I can't get the local service login.<br />\n<pre><code>//this doesn't work, there isn't a local service login\nusing (var context = new WindowsIdentity(@&quot;NT AUTHORITY\\LOCAL SERVICE&quot;).Impersonate()) { }</code></pre>\n\n",
    "PostedDate": "2013-02-13T02:27:46.197-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1000681",
    "ThreadId": "432344",
    "Html": "I would think you have an account privilege issue and that those privileges for the LocalService account are different across the two machines. You should check out the article at <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/aa382140(v=VS.85).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/windows/desktop/aa382140(v=VS.85).aspx</a> and then confirm that LocalSystem and IUSER comply.<br />\n",
    "PostedDate": "2013-02-13T09:23:57.573-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-04-03T11:38:07.097-07:00"
  }
]