[
  {
    "Id": "766887",
    "ThreadId": "315943",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I am using Task Schedular dll, I am creating task using system user it works on win7 and win2k8 machines,</p>\r\n<p>I am creating task using system user because i am running batch file to start my service Every 1 Hrs. can you help me</p>\r\n<p>It gives &nbsp;this Error&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div>\r\n<div>&quot;XXXXXX.job&quot; (StartSapienceService.bat) 2/14/2012 4:48:00 PM ** ERROR **<br>\r\nThe attempt to log on to the account associated with the task failed, therefore, the task did not run.<br>\r\nThe specific error is:<br>\r\n0x80041314: The task has been configured with an unsupported combination of account settings and run time options.<br>\r\nVerify that the task's Run-as name and password are valid and try again.</div>\r\n</div>\r\n<div></div>\r\n<div>see this code</div>\r\n<p></p>\r\n<p>&nbsp;</p>\r\n<pre>public static void AddTask(String strTaskName )\r\n        {\r\n            using (TaskService ts = new TaskService())\r\n            {\r\n                // Create a new task definition and assign properties\r\n                TaskDefinition td = ts.NewTask();\r\n                td.RegistrationInfo.Description = @&quot;Keeps your Sapience up to date. If this task is disabled or stopped,your Sapience will not be kept up to date, meaning security vulnerabilities that may arise cannot be fixed and features may not work. This task uninstalls itself when there is no Sapience using it.&quot;;\r\n\r\n                td.RegistrationInfo.Author = System.Security.Principal.WindowsIdentity.GetCurrent().Name; \r\n                \r\n\r\n                // Principal\r\n                td.Principal.LogonType = TaskLogonType.ServiceAccount;\r\n                td.Principal.UserId = &quot;SYSTEM&quot;;\r\n                //td.Principal.RunLevel = TaskRunLevel.Highest;\r\n                \r\n\r\n                // Settings \r\n                td.Settings.Enabled = true;\r\n                td.Settings.DisallowStartIfOnBatteries = false;\r\n                td.Settings.StopIfGoingOnBatteries = false;\r\n               // td.Settings.AllowDemandStart = true;\r\n                td.Settings.IdleSettings.IdleDuration = TimeSpan.FromSeconds(600);\r\n                td.Settings.IdleSettings.WaitTimeout = TimeSpan.FromSeconds(3600);\r\n                td.Settings.IdleSettings.StopOnIdleEnd = false;\r\n                td.Settings.IdleSettings.RestartOnIdle = false;\r\n                td.Settings.Hidden = false;\r\n                td.Settings.RunOnlyIfIdle = false;\r\n                td.Settings.WakeToRun = false;\r\n                td.Settings.ExecutionTimeLimit = TimeSpan.FromSeconds(0);\r\n                td.Settings.Priority = System.Diagnostics.ProcessPriorityClass.Normal;\r\n\r\n                // Add a trigger that will fire the task at this time every other day\r\n                DailyTrigger dtTemp = new DailyTrigger(1);\r\n\r\n                DailyTrigger dt = (DailyTrigger)td.Triggers.Add(dtTemp);\r\n                dt.Repetition.Duration = TimeSpan.FromDays(1);\r\n                dt.Repetition.Interval = TimeSpan.FromHours(1);\r\n                dt.Repetition.StopAtDurationEnd = false;\r\n                dt.StartBoundary = DateTime.Now;\r\n                dt.Enabled = true;\r\n\r\n\r\n                // Add an action that will launch Notepad whenever the trigger fires\r\n                td.Actions.Add(new ExecAction(_filePath, null, null));\r\n\r\n                // Register the task in the root folder\r\n                string taskName = strTaskName;\r\n                ts.RootFolder.RegisterTaskDefinition(taskName, td);\r\n                \r\n            }\r\n\r\n        }</pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-02-14T22:33:02.64-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]